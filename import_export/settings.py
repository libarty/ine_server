"""
Django settings for import_export project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
# !! update import for change way 
import os, sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# !! add new directory
sys.path += [BASE_DIR+r'\apps']
# !! for add templatetags in INSTALLED_APPS
# !! Otherwise, it does not see the module templatetags
sys.path += [BASE_DIR+r'\apps\django_rest']  

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vgy2ic&wg$f-!pe^few%7o6lfe(sf03j)(pb2&b_=d)ynq-t*('
'''
SECRET_KEY = os.environ['SECRET_KEY']
OR
with open('/etc/secret_key.txt') as f:
	SECRET_KEY = f.read().strip()
'''

'''
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'vgy2ic&wg$f-!pe^few%7o6lfe(sf03j)(pb2&b_=d)ynq-t*(')
'''




# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
'''
DEBUG = bool( os.environ.get('DJANGO_DEBUG', True) )
'''

ALLOWED_HOSTS = ['*'] # !! ser ALLOWED_ALL_HOSTS

# Application definition

INSTALLED_APPS = [

	
	'modeltranslation', # !! for multilingual site before install pip install django-modeltranslation
	# standard settings 
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	# !! for multilingual site
	'django.contrib.sites',
	'django.contrib.flatpages',
	# !! connect rest frame work
	'rest_framework',

	# !! for token
	'rest_framework.authtoken',
	'djoser',
	# !! for set filters
	 'django_filters',
	
	# !! add my apps
	'templatetags',
	
	'pages.apps.PagesConfig',
	'posts.apps.PostsConfig',
	'profiles.apps.ProfilesConfig',
	'django_rest.apps.DjangoRestConfig',
	
]


MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.locale.LocaleMiddleware',# !! for multilingual site
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'import_export.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'templates')], #!! add new directory for TEMPLATES
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				"templatetags.context_processors.get_list", # load my list in all Templates
			],
		},
	},
]

WSGI_APPLICATION = 'import_export.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True # !! must be True for multilingual site

USE_L10N = True

USE_TZ = True

 
# !! set select lang
gettext = lambda s: s 

LANGUAGES = (
	('es', gettext('Espano')),
	('en', gettext('English')),
)

# !! locale file for translate
LOCALE_PATHS = ( os.path.join(BASE_DIR, 'locale'), )


SITE_ID = 1 # for django.contrib.sites


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


# !! connect static files for example css, js, png

STATIC_URL = '/static/'


# !! for server <--
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
import dj_database_url
db_from_env = dj_database_url.config()
DATABASES['default'].update(db_from_env)
# new whitenoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_HOST = os.environ.get('DJANGO_STATIC_HOST', '')
STATIC_URL = STATIC_HOST + '/static/'

# !! for server -->








STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    '/var/www/static/',
]

# !! load media files in new directory 

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# redirecting to home page after login
LOGIN_REDIRECT_URL = '/articles/'
# show email letter in cmd.exe
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

'''
EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
EMAIL_HOST = 'smtp.beget.com'
EMAIL_PORT = 465
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'my@mail.com'
EMAIL_HOST_PASSWORD = 'my_password'

SERVER_EMAIL = "info@site.ru"
DEFAULT_FROM_EMAIL = "info@site.ru"
'''

# !! Rest FrameWork for client

REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES': (
		'rest_framework.authentication.TokenAuthentication',
		'rest_framework_simplejwt.authentication.JWTAuthentication',
	),
	'DEFAULT_FILTER_BACKENDS': (
		'django_filters.rest_framework.DjangoFilterBackend',
	),
}

# Token Settings for user enter

DJOSER = {
	'PASSWORD_RESET_CONFIRM_URL': '#/password/reset/confirm/{uid}/{token}',
	'USERNAME_RESET_CONFIRM_URL': '#/username/reset/confirm/{uid}/{token}',
	'ACTIVATION_URL': '#/activate/{uid}/{token}',
	'SEND_ACTIVATION_EMAIL': True,
	'SERIALIZERS': {},
}
















